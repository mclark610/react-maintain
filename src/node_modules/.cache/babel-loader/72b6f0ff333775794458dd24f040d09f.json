{"ast":null,"code":"var _jsxFileName = \"/src/react-maintain/src/components/UserDialog.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport doLogin from './MaintainData';\nexport default class FormDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleLogin = e => {\n      e.preventDefault();\n      alert(\"username: \" + this.state.username);\n      alert(\"handling Login: \" + doLogin(this.state.username, this.state.password));\n      /*\n      // axios\n      doLogin(this.state.username,this.state.password)\n      // if success - change button to username\n      .then( (results) => {\n        console.log(\"MaintainData:RESULTS: \" + JSON.stringify(results));\n      })\n      */\n      // if fail, present alert\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"red\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Login\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"For each wrong password given is one child we will take and feed to the hounds.\"), React.createElement(\"form\", {\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"username\",\n      label: \"User Name\",\n      value: this.state.username,\n      onChange: this.handleChange('username'),\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange('password'),\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleLogin,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n}","map":{"version":3,"sources":["/src/react-maintain/src/components/UserDialog.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","doLogin","FormDialog","Component","state","open","handleClickOpen","setState","handleClose","handleChange","name","event","target","value","handleLogin","e","preventDefault","alert","username","password","render","classes","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport doLogin from './MaintainData';\n\nexport default class FormDialog extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = name => (event) => {\n      this.setState({ [name]: event.target.value });\n  };\n\n  handleLogin = (e) => {\n      e.preventDefault();\n      alert(\"username: \" + this.state.username);\n      alert(\"handling Login: \" + doLogin(this.state.username,this.state.password));\n      /*\n     // axios\n    doLogin(this.state.username,this.state.password)\n    // if success - change button to username\n    .then( (results) => {\n        console.log(\"MaintainData:RESULTS: \" + JSON.stringify(results));\n    })\n    */\n\n    // if fail, present alert\n  }\n\n  render() {\n      const { classes } = this.props;\n    return (\n      <div>\n        <Button variant=\"outlined\" color=\"red\" onClick={this.handleClickOpen}>\n          Login\n        </Button>\n\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              For each wrong password given is one child we will take and feed to the hounds.\n            </DialogContentText>\n            <form action=\"\">\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"username\"\n              label=\"User Name\"\n              value={this.state.username}\n              onChange={this.handleChange('username')}\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange('password')}\n              fullWidth\n            />\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleLogin} color=\"primary\">\n              Login\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}