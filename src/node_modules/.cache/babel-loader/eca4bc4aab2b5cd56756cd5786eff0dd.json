{"ast":null,"code":"const axios = require('axios');\n\nconst doLogin = (username, password) => {\n  const url = \"http://localhost:5000/user/login\";\n  const localhostOptions = {\n    rejectUnauthorized: false,\n    withCredentials: true,\n    crossdomain: true\n  };\n  const remoteOptions = {\n    rejectUnauthorized: false,\n    withCredentials: false,\n    crossdomain: false\n  };\n  return new Promise((resolve, reject) => {\n    axios.post(\"http://localhost:5000/user/login\", {\n      username: 'mclark',\n      password: 'password'\n    }, localhostOptions).then(response => {\n      console.log(\"response: \" + JSON.stringify(response));\n      console.log(\"id: \" + response.session_id);\n      console.log(\"cookie: \" + document.cookie);\n      return username;\n    }).catch(error => {\n      alert(\"doLogin: error:\" + JSON.stringify(error));\n    });\n  });\n};\n\nexport default doLogin;","map":{"version":3,"sources":["/src/react-maintain/src/components/MaintainData.js"],"names":["axios","require","doLogin","username","password","url","localhostOptions","rejectUnauthorized","withCredentials","crossdomain","remoteOptions","Promise","resolve","reject","post","then","response","console","log","JSON","stringify","session_id","document","cookie","catch","error","alert"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACpC,QAAMC,GAAG,GAAC,kCAAV;AACA,QAAMC,gBAAgB,GAAG;AACrBC,IAAAA,kBAAkB,EAAE,KADC;AAErBC,IAAAA,eAAe,EAAE,IAFI;AAGrBC,IAAAA,WAAW,EAAE;AAHQ,GAAzB;AAMA,QAAMC,aAAa,GAAG;AAClBH,IAAAA,kBAAkB,EAAE,KADF;AAElBC,IAAAA,eAAe,EAAE,KAFC;AAGlBC,IAAAA,WAAW,EAAE;AAHK,GAAtB;AAOA,SAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;AAEnCb,IAAAA,KAAK,CAACc,IAAN,CAAW,kCAAX,EAA+C;AACvCX,MAAAA,QAAQ,EAAE,QAD6B;AAEvCC,MAAAA,QAAQ,EAAE;AAF6B,KAA/C,EAIIE,gBAJJ,EAMSS,IANT,CAMgBC,QAAD,IAAc;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAASF,QAAQ,CAACK,UAA9B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaI,QAAQ,CAACC,MAAlC;AAEA,aAAOpB,QAAP;AACH,KAZT,EAaSqB,KAbT,CAaiBC,KAAD,IAAW;AACfC,MAAAA,KAAK,CAAC,oBAAoBP,IAAI,CAACC,SAAL,CAAeK,KAAf,CAArB,CAAL;AACH,KAfT;AAiBH,GAnBM,CAAP;AAoBH,CAnCD;;AAqCA,eAAevB,OAAf","sourcesContent":["const axios = require('axios');\n\nconst doLogin = (username, password) => {\n    const url=\"http://localhost:5000/user/login\";\n    const localhostOptions = {\n        rejectUnauthorized: false,\n        withCredentials: true,\n        crossdomain: true\n    };\n\n    const remoteOptions = {\n        rejectUnauthorized: false,\n        withCredentials: false,\n        crossdomain: false\n    };\n\n\n    return new Promise((resolve,reject) => {\n\n        axios.post(\"http://localhost:5000/user/login\", {\n                username: 'mclark',\n                password: 'password'\n            },\n            localhostOptions\n            )\n                .then( (response) => {\n                    console.log(\"response: \" + JSON.stringify(response));\n                    console.log(\"id: \" + response.session_id);\n                    console.log(\"cookie: \" + document.cookie);\n\n                    return(username);\n                })\n                .catch( (error) => {\n                    alert(\"doLogin: error:\" + JSON.stringify(error));\n                })\n\n    });\n};\n\nexport default doLogin;\n"]},"metadata":{},"sourceType":"module"}