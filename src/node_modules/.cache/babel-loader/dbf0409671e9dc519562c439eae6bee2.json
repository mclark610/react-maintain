{"ast":null,"code":"var _jsxFileName = \"/src/react-maintain/src/components/PartPanel.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core';\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, Checkbox } from '@material-ui/core';\nconst styles = {\n  flex: {\n    flex: 1\n  }\n};\n\nclass PartPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      part: [],\n      expanded: 'panel-parts'\n    };\n\n    this.handleChange = name => (event, expanded) => {\n      this.setState({\n        [name]: event.target.value\n      });\n      this.setState({\n        expanded: expanded ? 'panel-parts' : false\n      });\n    };\n\n    this.handleToggle = value => () => {\n      const checked = this.state.checked;\n      const currentIndex = checked.indexOf(value);\n      const newChecked = [...checked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      this.setState({\n        checked: newChecked\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const expanded = this.state.expanded;\n    return React.createElement(ExpansionPanel, {\n      square: true,\n      expanded: expanded === 'panel-parts',\n      onChange: this.handleChange('panel-parts'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Part List\")), React.createElement(ExpansionPanelDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(List, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, [0, 1, 2, 3].map(value => React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: this.handleToggle(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.state.checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: \"Part item \".concat(value + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(CommentIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))))))));\n  }\n  /*{ render }*/\n\n\n}\n\nexport default withStyles(styles)(PartPanel);","map":{"version":3,"sources":["/src/react-maintain/src/components/PartPanel.js"],"names":["React","PropTypes","withStyles","IconButton","Typography","CommentIcon","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","List","ListItem","ListItemText","ListItemSecondaryAction","Checkbox","styles","flex","PartPanel","Component","state","open","part","expanded","handleChange","name","event","setState","target","value","handleToggle","checked","currentIndex","indexOf","newChecked","push","splice","render","classes","props","root","map","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport {ExpansionPanel,ExpansionPanelSummary,ExpansionPanelDetails} from '@material-ui/core';\nimport {List, ListItem,ListItemText, ListItemSecondaryAction,Checkbox} from '@material-ui/core';\n\nconst styles = {\n  flex: {\n    flex: 1,\n  },\n};\n\nclass PartPanel extends React.Component {\n    state = {\n        open: false,\n        part: [],\n        expanded: 'panel-parts',\n    }\n\n    handleChange = name => (event,expanded) => {\n        this.setState({ [name]: event.target.value });\n        this.setState({expanded: expanded ? 'panel-parts' : false});\n    };\n\n    handleToggle = value => () => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n\n        this.setState({\n          checked: newChecked,\n        });\n    };\n\n\n    render() {\n        const { classes } = this.props;\n        const { expanded } = this.state;\n\n        return (\n            <ExpansionPanel\n            square\n            expanded={expanded === 'panel-parts'}\n            onChange={this.handleChange('panel-parts')}\n            >\n            <ExpansionPanelSummary>\n            <Typography>Part List</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <List className={classes.root}>\n                {[0, 1, 2, 3].map(value => (\n                  <ListItem key={value} role={undefined} dense button onClick={this.handleToggle(value)}>\n                    <Checkbox\n                      checked={this.state.checked.indexOf(value) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                    <ListItemText primary={`Part item ${value + 1}`} />\n                    <ListItemSecondaryAction>\n                      <IconButton aria-label=\"Comments\">\n                        <CommentIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n            </List>\n            </ExpansionPanelDetails>\n            </ExpansionPanel>\n        )} /*{ render }*/\n    }\nexport default withStyles(styles)(PartPanel);\n"]},"metadata":{},"sourceType":"module"}