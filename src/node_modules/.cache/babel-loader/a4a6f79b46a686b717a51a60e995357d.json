{"ast":null,"code":"var _jsxFileName = \"/src/react-maintain/src/components/MaintainDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\nconst styles = {\n  appBar: {\n    position: 'relative'\n  },\n  flex: {\n    flex: 1\n  }\n};\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n}\n\nclass MaintainDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      maintain: []\n    };\n\n    this.handleClickOpen = () => {\n      console.log(\"ID: \" + this.props.maintainID);\n      this.getMaintain(this.props.maintainID);\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  getMaintain(id) {\n    let query = \"query{\\n        maintain(id:\" + id + \") {\\n          name,\\n          todos {\\n            id,\\n            name,\\n            parts{\\n              id,\\n              name\\n            }\\n          }\\n        }\\n      }\";\n    axios({\n      url: 'http://localhost:5000/toto/graphql',\n      method: 'post',\n      data: {\n        query: query\n      }\n    })\n    /*\n    axios.post(\"http://localhost:5000/graphql\", { withCredentials: true,\n                                                  crossdomain: true,\n                                                  rejectUnauthorized: false,\n         })\n    */\n    .then(response => {\n      console.log(\"get maintain response: \" + JSON.stringify(response));\n      console.log(\"response header: \" + JSON.stringify(response.headers));\n      this.setState({\n        maintain: response.data\n      }); // User logged in?\n\n      if (this.state.maintain.status) {\n        console.log(\"user status is : \" + this.state.maintain.status);\n        throw new Error(\"User not logged in\");\n      }\n\n      console.log(\"MAINTAIN OBJECT ===== \" + JSON.stringify(this.state.maintain));\n    }).catch(err => {\n      console.log(\"err maintain response: \" + JSON.stringify(err));\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Open full-screen dialog\"), React.createElement(Dialog, {\n      fullScreen: true,\n      open: this.state.open,\n      onClose: this.handleClose,\n      TransitionComponent: Transition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      className: classes.appBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.handleClose,\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      className: classes.flex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.maintain.name), React.createElement(Button, {\n      color: \"inherit\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"save\"))), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: \"Phone ringtone\",\n      secondary: \"Titania\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(ListItem, {\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: \"Default notification ringtone\",\n      secondary: \"Tethys\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(ListItem, {\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: \"ID value passed in?\",\n      secondary: this.props.maintainID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nMaintainDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MaintainDialog);","map":{"version":3,"sources":["/src/react-maintain/src/components/MaintainDialog.js"],"names":["React","PropTypes","withStyles","Dialog","ListItemText","ListItem","List","Divider","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","Button","axios","styles","appBar","position","flex","Transition","props","MaintainDialog","Component","state","open","maintain","handleClickOpen","console","log","maintainID","getMaintain","setState","handleClose","id","query","url","method","data","then","response","JSON","stringify","headers","status","Error","catch","err","render","classes","name","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport {Button} from '@material-ui/core';\nimport axios from 'axios';\n\nconst styles = {\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass MaintainDialog extends React.Component {\n  state = {\n    open: false,\n    maintain: []\n  };\n\n  handleClickOpen = () => {\n      console.log(\"ID: \" + this.props.maintainID)\n      this.getMaintain(this.props.maintainID);\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  getMaintain(id) {\n      let query = `query{\n        maintain(id:`+id+`) {\n          name,\n          todos {\n            id,\n            name,\n            parts{\n              id,\n              name\n            }\n          }\n        }\n      }`;\n\n      axios({\n          url: 'http://localhost:5000/toto/graphql',\n          method: 'post',\n          data: {\n              query: query\n          }\n      })\n      /*\n      axios.post(\"http://localhost:5000/graphql\", { withCredentials: true,\n                                                    crossdomain: true,\n                                                    rejectUnauthorized: false,\n\n          })\n      */\n              .then( (response) => {\n                  console.log(\"get maintain response: \" + JSON.stringify(response));\n                  console.log(\"response header: \" + JSON.stringify(response.headers));\n                  this.setState({maintain: response.data});\n\n                  // User logged in?\n                  if (this.state.maintain.status) {\n                      console.log(\"user status is : \" + this.state.maintain.status);\n                      throw( new Error(\"User not logged in\"));\n                  }\n\n                  console.log(\"MAINTAIN OBJECT ===== \" + JSON.stringify(this.state.maintain));\n              })\n              .catch( (err) => {\n                  console.log(\"err maintain response: \" + JSON.stringify(err));\n              })\n      }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n          Open full-screen dialog\n        </Button>\n        <Dialog\n          fullScreen\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={Transition}\n        >\n\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                {this.state.maintain.name}\n              </Typography>\n              <Button color=\"inherit\" onClick={this.handleClose}>\n                save\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <List>\n            <ListItem button>\n              <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n            </ListItem>\n            <Divider />\n            <ListItem button>\n              <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n            </ListItem>\n            <ListItem button>\n                <ListItemText primary=\"ID value passed in?\" secondary={this.props.maintainID} />\n              </ListItem>\n          </List>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nMaintainDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MaintainDialog);\n"]},"metadata":{},"sourceType":"module"}