{"ast":null,"code":"var _jsxFileName = \"/src/react-maintain/src/components/MaintainDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { InputLabel, FormControl, Button, TextField, Select, MenuItem, Input } from '@material-ui/core';\nimport axios from 'axios';\nconst styles = {\n  appBar: {\n    position: 'relative'\n  },\n  flex: {\n    flex: 1\n  }\n};\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n}\n\nclass MaintainDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      maintain: []\n    };\n\n    this.handleClickOpen = () => {\n      console.log(\"handleClickOpen ID: \" + this.props.maintainID);\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount ID: \" + this.props.maintainID);\n    this.getMaintain(this.props.maintainID);\n  }\n\n  getMaintain(id) {\n    let query = \"query{\\n        maintain(id:\" + id + \") {\\n          name,\\n          todos {\\n            id,\\n            name,\\n            parts{\\n              id,\\n              name\\n            }\\n          }\\n        }\\n      }\";\n    axios({\n      url: 'http://localhost:5000/toto/graphql',\n      method: 'post',\n      data: {\n        query: query\n      }\n    })\n    /*\n    axios.post(\"http://localhost:5000/graphql\", { withCredentials: true,\n                                                  crossdomain: true,\n                                                  rejectUnauthorized: false,\n         })\n    */\n    .then(response => {\n      console.log(\"get maintain response: \" + JSON.stringify(response));\n      console.log(\"response header: \" + JSON.stringify(response.headers));\n      console.log(\"******************************** set state maintain data ************************\");\n      console.log(\"response.data: \" + JSON.stringify(response.data[\"data\"][\"maintain\"]));\n      console.log(\"*********************************************************************************\");\n      this.setState({\n        maintain: response.data[\"data\"][\"maintain\"]\n      }); // User logged in?\n\n      if (this.state.maintain.status) {\n        console.log(\"user status is : \" + this.state.maintain.status);\n        throw new Error(\"User not logged in\");\n      }\n\n      console.log(\"STATE MAINTAIN: \" + JSON.stringify(this.state.maintain));\n      console.log(\"MAINTAIN OBJECT ===== \" + JSON.stringify(this.state.maintain.data.maintain));\n      console.log(\"MAINTAIN OBJECT NAME ===== \" + JSON.stringify(this.state.maintain.data.maintain.name));\n    }).catch(err => {\n      console.log(\"err maintain response: \" + JSON.stringify(err));\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Open full-screen dialog\"), React.createElement(Dialog, {\n      fullScreen: true,\n      open: this.state.open,\n      onClose: this.handleClose,\n      TransitionComponent: Transition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      className: classes.appBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.handleClose,\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      className: classes.flex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.maintain[\"name\"]), React.createElement(Button, {\n      color: \"inherit\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"save\"))), React.createElement(\"form\", {\n      className: classes.root,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"maintain-name\",\n      label: \"Maintain Project\",\n      className: classes.textField,\n      value: this.state.maintain[\"name\"],\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), \" \", React.createElement(TextField, {\n      id: \"maintain-part-nbr\",\n      label: \"Maintain Project\",\n      className: classes.textField,\n      value: this.state.maintain[\"part_nbr\"],\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), \" \", React.createElement(TextField, {\n      id: \"maintain-description\",\n      label: \"Description\",\n      multiline: true,\n      className: classes.textField,\n      value: this.state.maintain[\"description\"],\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), \" \"), React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"age-native-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Age\"), React.createElement(Select, {\n      native: true,\n      value: this.state.age,\n      onChange: this.handleChange('status'),\n      inputProps: {\n        name: 'status',\n        id: 'maintain-status'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Active\"), React.createElement(\"option\", {\n      value: \"inactive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Inactive\"))))));\n  }\n\n}\n\nMaintainDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MaintainDialog);","map":{"version":3,"sources":["/src/react-maintain/src/components/MaintainDialog.js"],"names":["React","PropTypes","withStyles","Dialog","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","InputLabel","FormControl","Button","TextField","Select","MenuItem","Input","axios","styles","appBar","position","flex","Transition","props","MaintainDialog","Component","state","open","maintain","handleClickOpen","console","log","maintainID","setState","handleClose","handleChange","name","event","target","value","componentDidMount","getMaintain","id","query","url","method","data","then","response","JSON","stringify","headers","status","Error","catch","err","render","classes","root","formControl","textField","age","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport {InputLabel, FormControl,Button,TextField,Select,MenuItem,Input} from '@material-ui/core';\nimport axios from 'axios';\n\nconst styles = {\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass MaintainDialog extends React.Component {\n  state = {\n    open: false,\n    maintain: []\n  };\n\n    componentDidMount() {\n        console.log(\"componentDidMount ID: \" + this.props.maintainID)\n        this.getMaintain(this.props.maintainID);\n    }\n\n  handleClickOpen = () => {\n      console.log(\"handleClickOpen ID: \" + this.props.maintainID)\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  getMaintain(id) {\n      let query = `query{\n        maintain(id:`+id+`) {\n          name,\n          todos {\n            id,\n            name,\n            parts{\n              id,\n              name\n            }\n          }\n        }\n      }`;\n\n      axios({\n          url: 'http://localhost:5000/toto/graphql',\n          method: 'post',\n          data: {\n              query: query\n          }\n      })\n      /*\n      axios.post(\"http://localhost:5000/graphql\", { withCredentials: true,\n                                                    crossdomain: true,\n                                                    rejectUnauthorized: false,\n\n          })\n      */\n              .then( (response) => {\n                  console.log(\"get maintain response: \" + JSON.stringify(response));\n                  console.log(\"response header: \" + JSON.stringify(response.headers));\n                  console.log(\"******************************** set state maintain data ************************\")\n                  console.log(\"response.data: \" + JSON.stringify(response.data[\"data\"][\"maintain\"]));\n                  console.log(\"*********************************************************************************\");\n                  this.setState({maintain: response.data[\"data\"][\"maintain\"]});\n                  // User logged in?\n                  if (this.state.maintain.status) {\n                      console.log(\"user status is : \" + this.state.maintain.status);\n                      throw( new Error(\"User not logged in\"));\n                  }\n                 console.log(\"STATE MAINTAIN: \" + JSON.stringify(this.state.maintain));\n                  console.log(\"MAINTAIN OBJECT ===== \" + JSON.stringify(this.state.maintain.data.maintain));\n                  console.log(\"MAINTAIN OBJECT NAME ===== \" + JSON.stringify(this.state.maintain.data.maintain.name));\n              })\n              .catch( (err) => {\n                  console.log(\"err maintain response: \" + JSON.stringify(err));\n              })\n      }\n      handleChange = name => event => {\n          this.setState({ [name]: event.target.value });\n      };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n          Open full-screen dialog\n        </Button>\n        <Dialog\n          fullScreen\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={Transition}\n        >\n\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                  {this.state.maintain[\"name\"]}\n              </Typography>\n              <Button color=\"inherit\" onClick={this.handleClose}>\n                save\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <form className={classes.root} autoComplete=\"off\">\n            <FormControl className={classes.formControl}>\n               <TextField id=\"maintain-name\"\n                          label=\"Maintain Project\"\n                          className={classes.textField}\n                          value={this.state.maintain[\"name\"]}\n                          margin=\"normal\"\n                /> {/*<!-- TextField -->*/}\n                <TextField id=\"maintain-part-nbr\"\n                           label=\"Maintain Project\"\n                           className={classes.textField}\n                           value={this.state.maintain[\"part_nbr\"]}\n                           margin=\"normal\"\n                 /> {/*<!-- TextField -->*/}\n                <TextField id=\"maintain-description\"\n                           label=\"Description\"\n                           multiline\n                           className={classes.textField}\n                           value={this.state.maintain[\"description\"]}\n                           margin=\"normal\"\n                 /> {/*<!-- TextField -->*/}\n             </FormControl>\n             <FormControl className={classes.formControl}>\n                 <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\n          <Select\n            native\n            value={this.state.age}\n            onChange={this.handleChange('status')}\n            inputProps={{\n              name: 'status',\n              id: 'maintain-status',\n            }}\n          >\n            <option value={\"active\"}>Active</option>\n            <option value={\"inactive\"}>Inactive</option>\n</Select>\n\n            </FormControl>\n        </form>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nMaintainDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MaintainDialog);\n"]},"metadata":{},"sourceType":"module"}