{"ast":null,"code":"var _jsxFileName = \"/src/react-maintain/src/components/MaintainDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport Slide from '@material-ui/core/Slide';\nimport { InputLabel, FormControl, Button, TextField, Select } from '@material-ui/core';\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core';\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, Checkbox } from '@material-ui/core';\nimport PartPanel from './PartPanel';\nimport axios from 'axios';\nconst styles = {\n  appBar: {\n    position: 'relative'\n  },\n  flex: {\n    flex: 1\n  }\n};\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n}\n\nclass MaintainDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      maintain: [],\n      expanded: 'panel-maintain',\n      checked: [0]\n    };\n\n    this.handleClickOpen = () => {\n      console.log(\"handleClickOpen ID: \" + this.props.maintainID);\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleToggle = value => () => {\n      const checked = this.state.checked;\n      const currentIndex = checked.indexOf(value);\n      const newChecked = [...checked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      this.setState({\n        checked: newChecked\n      });\n    };\n\n    this.handleChange = name => (event, expanded) => {\n      this.setState({\n        [name]: event.target.value\n      });\n      this.setState({\n        expanded: expanded ? 'panel-maintain' : false\n      });\n      this.setState({\n        expanded: expanded ? 'panel-task' : false\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount ID: \" + this.props.maintainID);\n    this.getMaintain(this.props.maintainID);\n  }\n\n  getMaintain(id) {\n    let query = \"query{\\n        maintain(id:\".concat(id, \") {\\n          name,\\n          todos {\\n            id,\\n            name,\\n            parts{\\n              id,\\n              name\\n            }\\n          }\\n        }\\n      }\");\n    axios({\n      url: 'http://localhost:5000/toto/graphql',\n      method: 'post',\n      data: {\n        query: query\n      }\n    })\n    /*\n    axios.post(\"http://localhost:5000/graphql\", { withCredentials: true,\n                                                  crossdomain: true,\n                                                  rejectUnauthorized: false,\n         })\n    */\n    .then(response => {\n      console.log(\"get maintain response: \" + JSON.stringify(response));\n      console.log(\"response header: \" + JSON.stringify(response.headers));\n      console.log(\"******************************** set state maintain data ************************\");\n      console.log(\"response.data: \" + JSON.stringify(response.data[\"data\"][\"maintain\"]));\n      console.log(\"*********************************************************************************\");\n      this.setState({\n        maintain: response.data[\"data\"][\"maintain\"]\n      }); // User logged in?\n\n      if (this.state.maintain.status) {\n        console.log(\"user status is : \" + this.state.maintain.status);\n        throw new Error(\"User not logged in\");\n      }\n\n      console.log(\"STATE MAINTAIN: \" + JSON.stringify(this.state.maintain));\n      console.log(\"MAINTAIN OBJECT ===== \" + JSON.stringify(this.state.maintain.data.maintain));\n      console.log(\"MAINTAIN OBJECT NAME ===== \" + JSON.stringify(this.state.maintain.data.maintain.name));\n    }).catch(err => {\n      console.log(\"err maintain response: \" + JSON.stringify(err));\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const expanded = this.state.expanded;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Open full-screen dialog\"), React.createElement(Dialog, {\n      fullScreen: true,\n      open: this.state.open,\n      onClose: this.handleClose,\n      TransitionComponent: Transition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      className: classes.appBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.handleClose,\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      className: classes.flex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.maintain[\"name\"]), React.createElement(Button, {\n      color: \"inherit\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"save\"))), React.createElement(ExpansionPanel, {\n      square: true,\n      expanded: expanded === 'panel-maintain',\n      onChange: this.handleChange('panel-maintain'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Maintainence Info\")), React.createElement(ExpansionPanelDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.root,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"maintain-part-nbr\",\n      label: \"Maintain Project\",\n      className: classes.textField,\n      value: this.state.maintain[\"part_nbr\"],\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), \" \", React.createElement(TextField, {\n      id: \"maintain-description\",\n      label: \"Description\",\n      multiline: true,\n      className: classes.textField,\n      value: this.state.maintain[\"description\"],\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), \" \"), React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"maintain-status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Select, {\n      native: true,\n      value: this.state.maintain[\"status\"],\n      onChange: this.handleChange('status'),\n      inputProps: {\n        name: 'status',\n        id: 'maintain-status'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Active\"), React.createElement(\"option\", {\n      value: \"inactive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Inactive\")))))), React.createElement(ExpansionPanel, {\n      square: true,\n      expanded: expanded === 'panel-task',\n      onChange: this.handleChange('panel-task'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Task List\")), React.createElement(ExpansionPanelDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(List, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, [0, 1, 2, 3].map(value => React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: this.handleToggle(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.state.checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: \"Line item \".concat(value + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(CommentIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })))))))), React.createElement(ExpansionPanel, {\n      square: true,\n      expanded: expanded === 'panel-notes',\n      onChange: this.handleChange('panel-notes'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Note List\")), React.createElement(ExpansionPanelDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(List, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, [0, 1, 2, 3].map(value => React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: this.handleToggle(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: this.state.checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: \"Line item \".concat(value + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(CommentIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })))))))), React.createElement(PartPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })));\n  }\n\n}\n\nMaintainDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MaintainDialog);","map":{"version":3,"sources":["/src/react-maintain/src/components/MaintainDialog.js"],"names":["React","PropTypes","withStyles","Dialog","AppBar","Toolbar","IconButton","Typography","CloseIcon","CommentIcon","Slide","InputLabel","FormControl","Button","TextField","Select","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","List","ListItem","ListItemText","ListItemSecondaryAction","Checkbox","PartPanel","axios","styles","appBar","position","flex","Transition","props","MaintainDialog","Component","state","open","maintain","expanded","checked","handleClickOpen","console","log","maintainID","setState","handleClose","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleChange","name","event","target","componentDidMount","getMaintain","id","query","url","method","data","then","response","JSON","stringify","headers","status","Error","catch","err","render","classes","root","formControl","textField","map","undefined","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport Slide from '@material-ui/core/Slide';\nimport {InputLabel, FormControl,Button,TextField,Select} from '@material-ui/core';\nimport {ExpansionPanel,ExpansionPanelSummary,ExpansionPanelDetails} from '@material-ui/core';\nimport {List, ListItem,ListItemText, ListItemSecondaryAction,Checkbox} from '@material-ui/core';\nimport PartPanel from './PartPanel';\n\nimport axios from 'axios';\n\nconst styles = {\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass MaintainDialog extends React.Component {\n  state = {\n    open: false,\n    maintain: [],\n    expanded: 'panel-maintain',\n    checked: [0]\n  };\n\n    componentDidMount() {\n        console.log(\"componentDidMount ID: \" + this.props.maintainID)\n        this.getMaintain(this.props.maintainID);\n    }\n\n  handleClickOpen = () => {\n      console.log(\"handleClickOpen ID: \" + this.props.maintainID)\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleToggle = value => () => {\n      const { checked } = this.state;\n      const currentIndex = checked.indexOf(value);\n      const newChecked = [...checked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      this.setState({\n        checked: newChecked,\n      });\n  };\n  getMaintain(id) {\n      let query = `query{\n        maintain(id:${id}) {\n          name,\n          todos {\n            id,\n            name,\n            parts{\n              id,\n              name\n            }\n          }\n        }\n      }`;\n\n      axios({\n          url: 'http://localhost:5000/toto/graphql',\n          method: 'post',\n          data: {\n              query: query\n          }\n      })\n      /*\n      axios.post(\"http://localhost:5000/graphql\", { withCredentials: true,\n                                                    crossdomain: true,\n                                                    rejectUnauthorized: false,\n\n          })\n      */\n              .then( (response) => {\n                  console.log(\"get maintain response: \" + JSON.stringify(response));\n                  console.log(\"response header: \" + JSON.stringify(response.headers));\n                  console.log(\"******************************** set state maintain data ************************\")\n                  console.log(\"response.data: \" + JSON.stringify(response.data[\"data\"][\"maintain\"]));\n                  console.log(\"*********************************************************************************\");\n                  this.setState({maintain: response.data[\"data\"][\"maintain\"]});\n                  // User logged in?\n                  if (this.state.maintain.status) {\n                      console.log(\"user status is : \" + this.state.maintain.status);\n                      throw( new Error(\"User not logged in\"));\n                  }\n                 console.log(\"STATE MAINTAIN: \" + JSON.stringify(this.state.maintain));\n                  console.log(\"MAINTAIN OBJECT ===== \" + JSON.stringify(this.state.maintain.data.maintain));\n                  console.log(\"MAINTAIN OBJECT NAME ===== \" + JSON.stringify(this.state.maintain.data.maintain.name));\n              })\n              .catch( (err) => {\n                  console.log(\"err maintain response: \" + JSON.stringify(err));\n              })\n      }\n      handleChange = name => (event,expanded) => {\n          this.setState({ [name]: event.target.value });\n          this.setState({expanded: expanded ? 'panel-maintain' : false});\n          this.setState({expanded: expanded ? 'panel-task' : false});\n      };\n\n  render() {\n    const { classes } = this.props;\n    const { expanded } = this.state;\n    return (\n      <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n          Open full-screen dialog\n        </Button>\n        <Dialog\n          fullScreen\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={Transition}\n        >\n\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                  {this.state.maintain[\"name\"]}\n              </Typography>\n              <Button color=\"inherit\" onClick={this.handleClose}>\n                save\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <ExpansionPanel\n         square\n         expanded={expanded === 'panel-maintain'}\n         onChange={this.handleChange('panel-maintain')}\n>\n    <ExpansionPanelSummary>\n        <Typography>Maintainence Info</Typography>\n    </ExpansionPanelSummary>\n    <ExpansionPanelDetails>\n          <form className={classes.root} autoComplete=\"off\">\n            <FormControl className={classes.formControl}>\n                <TextField id=\"maintain-part-nbr\"\n                           label=\"Maintain Project\"\n                           className={classes.textField}\n                           value={this.state.maintain[\"part_nbr\"]}\n                           margin=\"normal\"\n                 /> {/*<!-- TextField -->*/}\n                <TextField id=\"maintain-description\"\n                           label=\"Description\"\n                           multiline\n                           className={classes.textField}\n                           value={this.state.maintain[\"description\"]}\n                           margin=\"normal\"\n                 /> {/*<!-- TextField -->*/}\n             </FormControl>\n             <FormControl className={classes.formControl}>\n                 <InputLabel htmlFor=\"maintain-status\">Status</InputLabel>\n          <Select\n            native\n            value={this.state.maintain[\"status\"]}\n            onChange={this.handleChange('status')}\n            inputProps={{\n              name: 'status',\n              id: 'maintain-status',\n            }}\n          >\n            <option value={\"active\"}>Active</option>\n            <option value={\"inactive\"}>Inactive</option>\n        </Select>\n            </FormControl>\n        </form>\n        </ExpansionPanelDetails>\n    </ExpansionPanel>\n    <ExpansionPanel\n   square\n   expanded={expanded === 'panel-task'}\n   onChange={this.handleChange('panel-task')}\n>\n<ExpansionPanelSummary>\n  <Typography>Task List</Typography>\n</ExpansionPanelSummary>\n<ExpansionPanelDetails>\n    <List className={classes.root}>\n        {[0, 1, 2, 3].map(value => (\n          <ListItem key={value} role={undefined} dense button onClick={this.handleToggle(value)}>\n            <Checkbox\n              checked={this.state.checked.indexOf(value) !== -1}\n              tabIndex={-1}\n              disableRipple\n            />\n            <ListItemText primary={`Line item ${value + 1}`} />\n            <ListItemSecondaryAction>\n              <IconButton aria-label=\"Comments\">\n                <CommentIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n</List>\n</ExpansionPanelDetails>\n</ExpansionPanel>\n\n<ExpansionPanel\nsquare\nexpanded={expanded === 'panel-notes'}\nonChange={this.handleChange('panel-notes')}\n>\n<ExpansionPanelSummary>\n<Typography>Note List</Typography>\n</ExpansionPanelSummary>\n<ExpansionPanelDetails>\n<List className={classes.root}>\n    {[0, 1, 2, 3].map(value => (\n      <ListItem key={value} role={undefined} dense button onClick={this.handleToggle(value)}>\n        <Checkbox\n          checked={this.state.checked.indexOf(value) !== -1}\n          tabIndex={-1}\n          disableRipple\n        />\n        <ListItemText primary={`Line item ${value + 1}`} />\n        <ListItemSecondaryAction>\n          <IconButton aria-label=\"Comments\">\n            <CommentIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    ))}\n</List>\n</ExpansionPanelDetails>\n</ExpansionPanel>\n\n        <PartPanel/>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nMaintainDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MaintainDialog);\n"]},"metadata":{},"sourceType":"module"}