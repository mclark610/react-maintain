{"version":3,"sources":["components/MaintainPanel.js","components/PartPanel.js","components/NotePanel.js","components/TaskPanel.js","components/MaintainDialog.js","components/MaintainCard.js","components/MaintainList.js","components/MainMenu.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","container","display","flexWrap","flex","grid","textAlign","textField","marginLeft","spacing","unit","marginRight","width","dense","marginTop","MaintainPanel","state","open","maintain","expanded","checked","handleChange","name","event","_this","setState","Object","defineProperty","target","value","handleToggle","currentIndex","indexOf","newChecked","toConsumableArray","push","splice","classes","this","props","react_default","a","createElement","index_es","square","onChange","Typography_default","className","noValidate","autoComplete","Grid_default","item","xs","id","label","TextField","margin","description","multiline","part_nbr","complete","IconButton_default","React","Component","withStyles","PartPanel","part","_this2","root","map","key","role","undefined","button","onClick","tabIndex","disableRipple","primary","concat","aria-label","Comment_default","NotePanel","note","TaskPanel","task","Transition","Slide_default","assign","direction","MaintainDialog","handleClickOpen","console","log","maintainID","handleClose","getMaintain","query","axios","url","method","data","then","response","JSON","stringify","headers","status","Error","catch","err","variant","color","Dialog_default","fullScreen","onClose","TransitionComponent","AppBar_default","appBar","Toolbar_default","Close_default","components_MaintainPanel","components_TaskPanel","components_NotePanel","components_PartPanel","position","MaintainCard","selectedValue","Card_default","CardContent_default","gutterBottom","component","CardActions_default","components_MaintainDialog","MaintainList","maintains","searchFor","getMaintains","post","username","password","rejectUnauthorized","withCredentials","crossdomain","session_id","document","cookie","response2","get","length","TextField_default","style","padding","placeholder","onSearchInputChange","currentMaintain","sm","lg","xl","components_MaintainCard","MainMenu","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","menuButton","Menu_default","grow","flexGrow","MainPage","components_MainMenu","components_MaintainList","App","cookies","components_MainPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d69cf774.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport {ExpansionPanel,ExpansionPanelSummary,ExpansionPanelDetails} from '@material-ui/core';\nimport {TextField} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n  },\n  flex: {\n    flex: 1,\n  },\n  grid: {\n      textAlign: 'center'\n  },\n  textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n    dense: {\n      marginTop: 19,\n  },\n});\n\nclass MaintainPanel extends React.Component {\n    state = {\n        open: false,\n        maintain: [],\n        expanded: 'panel-maintain',\n        checked: [0]\n    }\n    handleChange = name => (event,expanded) => {\n        this.setState({ [name]: event.target.value });\n        if(typeof expanded != 'undefined') {\n            this.setState({expanded: expanded ? 'panel-maintain' : false});\n        }\n    };\n\n    handleToggle = value => () => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n        this.setState({\n          checked: newChecked,\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { expanded } = this.state;\n\n        return(\n                <ExpansionPanel\n                square\n                expanded={expanded === 'panel-maintain'}\n                onChange={this.handleChange('panel-maintain')}\n                >\n                    <ExpansionPanelSummary>\n                        <Typography>Maintain</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <form className={classes.container} noValidate autoComplete=\"off\">\n                        <Grid container className={styles.grid} spacing={24}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    id=\"maintain-name\"\n                                    label=\"Name\"\n                                    className={classes.TextField}\n                                    value={this.state.name}\n                                    onChange={this.handleChange('name')}\n                                    margin=\"normal\"\n                                    />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <TextField\n                                    id=\"maintain-description\"\n                                    label=\"Description\"\n                                    className={classes.TextField}\n                                    value={this.state.description}\n                                    multiline\n                                    onChange={this.handleChange('description')}\n                                    margin=\"normal\"\n                                    />\n                            </Grid>\n                            <Grid item xs={2}>\n                                <TextField\n                                    id=\"maintain-part-nbr\"\n                                    label=\"Part #\"\n                                    className={classes.TextField}\n                                    value={this.state.part_nbr}\n                                    onChange={this.handleChange('part_nbr')}\n                                    margin=\"normal\"\n                                    />\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField\n                                    id=\"maintain-status\"\n                                    label=\"Status\"\n                                    className={classes.TextField}\n                                    value={this.state.description}\n                                    onChange={this.handleChange('status')}\n                                    margin=\"normal\"\n                                    />\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField\n                                    id=\"maintain-complete\"\n                                    label=\"Complete\"\n                                    className={classes.TextField}\n                                    value={this.state.complete}\n                                    onChange={this.handleChange('complete')}\n                                    margin=\"normal\"\n                                    />\n                            </Grid>\n                            <Grid item xs={3}>\n                                <IconButton\n                                    id=\"maintain-btn-add\"\n                                    label=\"Add\"\n                                    className={classes.TextField}\n                                    value={this.state.complete}\n                                    onChange={this.handleChange('add-button')}\n                                    margin=\"normal\"\n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <IconButton\n                                        id=\"maintain-btn-cancel\"\n                                        label=\"Cancel\"\n                                        className={classes.TextField}\n                                        value={this.state.complete}\n                                        onChange={this.handleChange('cancel-button')}\n                                        margin=\"normal\"\n                                        />\n                            </Grid>\n                        </Grid>\n                    </form>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n        )\n    }\n}\n\nexport default withStyles(styles)(MaintainPanel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport {ExpansionPanel,ExpansionPanelSummary,ExpansionPanelDetails} from '@material-ui/core';\nimport {List, ListItem,ListItemText, ListItemSecondaryAction,Checkbox} from '@material-ui/core';\n\nconst styles = {\n  flex: {\n    flex: 1,\n  },\n};\n\nclass PartPanel extends React.Component {\n    state = {\n        open: false,\n        part: [],\n        expanded: 'panel-parts',\n        checked: [0]\n    }\n\n    handleChange = name => (event,expanded) => {\n        this.setState({ [name]: event.target.value });\n        this.setState({expanded: expanded ? 'panel-parts' : false});\n    };\n\n    handleToggle = value => () => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n\n        this.setState({\n          checked: newChecked,\n        });\n    };\n\n\n    render() {\n        const { classes } = this.props;\n        const { expanded } = this.state;\n\n        return (\n            <ExpansionPanel\n            square\n            expanded={expanded === 'panel-parts'}\n            onChange={this.handleChange('panel-parts')}\n            >\n            <ExpansionPanelSummary>\n            <Typography>Part List</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <List className={classes.root}>\n                {[0, 1, 2, 3].map(value => (\n                  <ListItem key={value} role={undefined} dense button onClick={this.handleToggle(value)}>\n                    <Checkbox\n                      checked={this.state.checked.indexOf(value) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                    <ListItemText primary={`Part item ${value + 1}`} />\n                    <ListItemSecondaryAction>\n                      <IconButton aria-label=\"Comments\">\n                        <CommentIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n            </List>\n            </ExpansionPanelDetails>\n            </ExpansionPanel>\n        )} /*{ render }*/\n    }\n\n    PartPanel.propTypes = {\n      classes: PropTypes.object.isRequired,\n    };\nexport default withStyles(styles)(PartPanel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport {ExpansionPanel,ExpansionPanelSummary,ExpansionPanelDetails} from '@material-ui/core';\nimport {List, ListItem,ListItemText, ListItemSecondaryAction,Checkbox} from '@material-ui/core';\n\nconst styles = {\n  flex: {\n    flex: 1,\n  },\n};\n\nclass NotePanel extends React.Component {\n    state = {\n        open: false,\n        note: [],\n        expanded: 'panel-notes',\n        checked: [0]\n    }\n\n    handleChange = name => (event,expanded) => {\n        this.setState({ [name]: event.target.value });\n        this.setState({expanded: expanded ? 'panel-notes' : false});\n    };\n\n    handleToggle = value => () => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n\n        this.setState({\n          checked: newChecked,\n        });\n    };\n\n\n    render() {\n        const { classes } = this.props;\n        const { expanded } = this.state;\n\n        return (\n            <ExpansionPanel\n            square\n            expanded={expanded === 'panel-notes'}\n            onChange={this.handleChange('panel-notes')}\n            >\n            <ExpansionPanelSummary>\n            <Typography>Notes</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <List className={classes.root}>\n                {[0, 1, 2, 3].map(value => (\n                  <ListItem key={value} role={undefined} dense button onClick={this.handleToggle(value)}>\n                    <Checkbox\n                      checked={this.state.checked.indexOf(value) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                <ListItemText primary={`Note # ${value + 1}`} />\n                    <ListItemSecondaryAction>\n                      <IconButton aria-label=\"Comments\">\n                        <CommentIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n            </List>\n            </ExpansionPanelDetails>\n            </ExpansionPanel>\n        )} /*{ render }*/\n    }\n\n    NotePanel.propTypes = {\n      classes: PropTypes.object.isRequired,\n    };\n\nexport default withStyles(styles)(NotePanel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport {ExpansionPanel,ExpansionPanelSummary,ExpansionPanelDetails} from '@material-ui/core';\nimport {List, ListItem,ListItemText, ListItemSecondaryAction,Checkbox} from '@material-ui/core';\n\nconst styles = {\n  flex: {\n    flex: 1,\n  },\n};\n\nclass TaskPanel extends React.Component {\n    state = {\n        open: false,\n        task: [],\n        expanded: 'panel-tasks',\n        checked: [0]\n    }\n\n    handleChange = name => (event,expanded) => {\n        this.setState({ [name]: event.target.value });\n        this.setState({expanded: expanded ? 'panel-tasks' : false});\n    };\n\n    handleToggle = value => () => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n\n        this.setState({\n          checked: newChecked,\n        });\n    };\n\n\n    render() {\n        const { classes } = this.props;\n        const { expanded } = this.state;\n\n        return (\n            <ExpansionPanel\n            square\n            expanded={expanded === 'panel-tasks'}\n            onChange={this.handleChange('panel-tasks')}\n            >\n            <ExpansionPanelSummary>\n            <Typography>Tasks</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n            <List className={classes.root}>\n                {[0, 1, 2, 3].map(value => (\n                  <ListItem key={value} role={undefined} dense button onClick={this.handleToggle(value)}>\n                    <Checkbox\n                      checked={this.state.checked.indexOf(value) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                <ListItemText primary={`Task # ${value + 1}`} />\n                    <ListItemSecondaryAction>\n                      <IconButton aria-label=\"Comments\">\n                        <CommentIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n            </List>\n            </ExpansionPanelDetails>\n            </ExpansionPanel>\n        )} /*{ render }*/\n    }\n\n    TaskPanel.propTypes = {\n      classes: PropTypes.object.isRequired,\n    };\n\n\nexport default withStyles(styles)(TaskPanel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport {Button} from '@material-ui/core';\nimport MaintainPanel from './MaintainPanel';\nimport PartPanel from './PartPanel';\nimport NotePanel from './NotePanel';\nimport TaskPanel from './TaskPanel';\n\nimport axios from 'axios';\n\nconst styles = {\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass MaintainDialog extends React.Component {\n  state = {\n    open: false,\n    maintain: [],\n    expanded: 'panel-maintain',\n    checked: [0]\n  };\n\n    componentDidMount() {\n        console.log(\"componentDidMount ID: \" + this.props.maintainID)\n        this.getMaintain(this.props.maintainID);\n    }\n\n  handleClickOpen = () => {\n      console.log(\"handleClickOpen ID: \" + this.props.maintainID)\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleToggle = value => () => {\n      const { checked } = this.state;\n      const currentIndex = checked.indexOf(value);\n      const newChecked = [...checked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      this.setState({\n        checked: newChecked,\n      });\n  };\n  getMaintain(id) {\n      let query = `query{\n        maintain(id:${id}) {\n          name,\n          todos {\n            id,\n            name,\n            parts{\n              id,\n              name\n            }\n          }\n        }\n      }`;\n\n      axios({\n          url: 'http://localhost:5000/toto/graphql',\n          method: 'post',\n          data: {\n              query: query\n          }\n      })\n      /*\n      axios.post(\"http://localhost:5000/graphql\", { withCredentials: true,\n                                                    crossdomain: true,\n                                                    rejectUnauthorized: false,\n\n          })\n      */\n              .then( (response) => {\n                  console.log(\"get maintain response: \" + JSON.stringify(response));\n                  console.log(\"response header: \" + JSON.stringify(response.headers));\n                  console.log(\"******************************** set state maintain data ************************\")\n                  console.log(\"response.data: \" + JSON.stringify(response.data[\"data\"][\"maintain\"]));\n                  console.log(\"*********************************************************************************\");\n                  this.setState({maintain: response.data[\"data\"][\"maintain\"]});\n                  // User logged in?\n                  if (this.state.maintain.status) {\n                      console.log(\"user status is : \" + this.state.maintain.status);\n                      throw( new Error(\"User not logged in\"));\n                  }\n                 console.log(\"STATE MAINTAIN: \" + JSON.stringify(this.state.maintain));\n                  console.log(\"MAINTAIN OBJECT ===== \" + JSON.stringify(this.state.maintain.data.maintain));\n                  console.log(\"MAINTAIN OBJECT NAME ===== \" + JSON.stringify(this.state.maintain.data.maintain.name));\n              })\n              .catch( (err) => {\n                  console.log(\"err maintain response: \" + JSON.stringify(err));\n              })\n      }\n      handleChange = name => (event,expanded) => {\n          this.setState({ [name]: event.target.value });\n          this.setState({expanded: expanded ? 'panel-maintain' : false});\n      };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n          Open full-screen dialog\n        </Button>\n        <Dialog\n          fullScreen\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={Transition}\n        >\n\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                  {this.state.maintain[\"name\"]}\n              </Typography>\n              <Button color=\"inherit\" onClick={this.handleClose}>\n                save\n              </Button>\n            </Toolbar>\n          </AppBar>\n            <MaintainPanel />\n            <TaskPanel />\n            <NotePanel />\n            <PartPanel />\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nMaintainDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MaintainDialog);\n","import  React, {Component } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport MaintainDialog from './MaintainDialog';\n\nclass MaintainCard extends Component {\n        state = {\n            open: false,\n            selectedValue: false\n        }\n\n        render() {\n            console.log(this.props)\n            return(\n                <div>\n                    { this.props.maintain ? (\n                        <Card >\n                            <CardContent>\n                                <Typography gutterBottom variant=\"headline\" component=\"h2\">\n                                    {this.props.maintain.name}\n                                </Typography>\n                                <Typography component=\"p\">\n                                    {this.props.maintain.description}\n                                </Typography>\n                                <Typography component=\"p\">\n                                    {this.props.maintain.part_nbr}\n                                </Typography>\n                                <Typography component=\"p\">\n                                    {this.props.maintain.status}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <MaintainDialog\n                                  selectedValue={this.state.selectedValue}\n                                  maintainID={this.props.maintain.id}\n                                  open={this.state.open}\n                                  onClose={this.handleClose}\n                                />\n                            </CardActions>\n                        </Card>\n                    ) : null}\n                </div>\n            )\n        }\n    }\n\nexport default MaintainCard;\n","import  React, {Component } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport MaintainCard from './MaintainCard';\n\nimport axios from 'axios'\n\nclass MaintainList extends Component {\n    state = {\n        maintains: [],\n        searchFor: '',\n    }\n\n\n    componentDidMount() {\n        this.getMaintains();\n    }\n\n    getMaintains() {\n        console.log(\"IN GET MAINTAINS\")\n\n        axios.post(\"http://localhost:5000/user/login\", {\n                username: 'mclark',\n                password: 'password'\n            },\n            {\n                    rejectUnauthorized: false,\n                    withCredentials: true,\n                    crossdomain: true\n                })\n                .then( (response) => {\n                    console.log(\"response: \" + JSON.stringify(response));\n                    console.log(\"id: \" + response.session_id);\n                    console.log(\"cookie: \" + document.cookie);\n                    return(response)\n                })\n/*\n        axios.post(\"https://casualcoder.net:5000/user/login\", {\n            username: 'mclark',\n            password: 'password'\n        },\n        {\n            rejectUnauthorized: false,\n            withCredentials: false,\n            crossdomain: false\n        })\n        .then( (response) => {\n            console.log(\"response: \" + JSON.stringify(response));\n            console.log(\"id: \" + response.session_id);\n            console.log(\"cookie: \" + document.cookie);\n            return(response)\n        })\n*/\n        .then( (response2) => {\n\n/*\n           axios.get(\"https://casualcoder.net:5000/maintain\", {withCredentials: true,\n                                                                crossdomain: true,\n                                                                rejectUnauthorized: false,\n\n               })\n*/\n\n    axios.get(\"http://localhost:5000/maintain\", {    withCredentials: true,\n                                                     crossdomain: true,\n                                                     rejectUnauthorized: false,\n\n        })\n\n                .then( (response) => {\n                    console.log(\"get maintain response: \" + JSON.stringify(response));\n                    console.log(\"response header: \" + JSON.stringify(response.headers));\n                    this.setState({maintains: response.data});\n\n                    // User logged in?\n                    if (this.state.maintains.status) {\n                        console.log(\"user status is : \" + this.state.maintains.status);\n                        throw( new Error(\"User not logged in\"));\n                    }\n\n                    console.log(\"MAINTAINS--- \" + JSON.stringify(this.state.maintains));\n                })\n            })\n        .catch( (err) => {\n            console.log(\"error!: \" + JSON.stringify(err));\n        })\n\n    }\n\n    render() {\n            return (\n                <div>\n                    {\n                        this.state.maintains.length ?\n                        (\n                            <div>\n                            <TextField style={{padding: 24}}\n                                id=\"searchInput\"\n                                placeholder=\"Maintenance\"\n                                margin=\"normal\"\n                                onChange={this.onSearchInputChange}\n                                />\n                            <Grid container spacing={24} style={{padding: 24}}>\n                                { this.state.maintains.map(currentMaintain => (\n                                    <Grid item key={currentMaintain.id} xs={12} sm={6} lg={4} xl={3}>\n                                        <MaintainCard maintain={currentMaintain} />\n                                    </Grid>\n                                ))}\n                            </Grid>\n                            </div>\n                        )\n                        :\n                        \"nothing to maintain\"\n                    }\n\n\n                </div>\n            )\n        }\n\n}\n\nexport default MaintainList;\n","import  React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\nclass MainMenu extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n           open: false,\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n              <AppBar position=\"fixed !important\">\n                <Toolbar>\n                  <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                    <MenuIcon />\n                  </IconButton>\n                  <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                    News\n                  </Typography>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default withStyles(styles)(MainMenu);\n","import  React, {Component } from 'react'\nimport MaintainList from './MaintainList'\nimport MainMenu from './MainMenu'\n\nclass MainPage extends Component {\n    render() {\n        return (\n            <div>\n              <MainMenu />\n              <MaintainList />\n            </div>\n        )\n    }\n}\n\nexport default MainPage;\n","import React from 'react';\nimport './App.css';\nimport MainPage from './components/MainPage';\nimport cookies from 'js-cookie';\n\n\nclass App extends React.Component {\n    state = {\n        username: cookies.get('37943e50-9319-438f-abcf-9f8f09a1091f')\n    };\n  render() {\n      return(\n        <div className=\"App\">\n          <header className=\"App-header\">\n              <MainPage />\n          </header>\n      </div>\n  );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}